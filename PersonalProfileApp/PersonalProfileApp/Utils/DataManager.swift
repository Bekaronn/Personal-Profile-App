import Foundation

class DataManager {
    static let shared = DataManager()
    private let defaults = UserDefaults.standard

    // MARK: - –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    private let defaultUser = User(
        name: "–ú—ã—Ä–∑–∞–∫—É–ª –ë–µ–∫–∞—Ä—ã—Å",
        age: 20,
        location: "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –ê–ª–º–∞—Ç—ã",
        bio: "FullStack-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —É–≤–ª–µ–∫–∞—é—Å—å AI –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏."
    )
    
    private let defaultHobbies = [
        Hobby(id: UUID(), icon: "üéπ", name: "–ü–∏–∞–Ω–∏–Ω–æ", description: "–õ—é–±–ª—é –∏–≥—Ä–∞—Ç—å –∫–ª–∞—Å—Å–∏–∫—É."),
        Hobby(id: UUID(), icon: "üéæ", name: "–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å", description: "–ù—Ä–∞–≤–∏—Ç—Å—è –∏–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏."),
        Hobby(id: UUID(), icon: "üèä", name: "–ü–ª–∞–≤–∞–Ω–∏–µ", description: "–ü–ª–∞–≤–∞–Ω–∏–µ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è.")
    ]
    
    private let defaultGoals = [
        Goal(id: UUID(), description: "2027 ‚Äî –ü–æ—Å—Ç—É–ø–∏—Ç—å –≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É –∑–∞–≥—Ä–∞–Ω–∏—Ü—É"),
        Goal(id: UUID(), description: "2030 ‚Äî –†–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–æ–ø–æ–≤–æ–π AI-–∫–æ–º–ø–∞–Ω–∏–∏"),
        Goal(id: UUID(), description: "2033 ‚Äî –í—ã–π—Ç–∏ –Ω–∞ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–π –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –¥–æ—Ö–æ–¥")
    ]

    // MARK: - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    private func saveData<T: Codable>(_ key: String, data: T) {
        if let encoded = try? JSONEncoder().encode(data) {
            defaults.set(encoded, forKey: key)
        }
    }
    
    private func loadData<T: Codable>(_ key: String, defaultValue: T) -> T {
        guard let data = defaults.data(forKey: key),
              let decoded = try? JSONDecoder().decode(T.self, from: data) else {
            return defaultValue
        }
        return decoded
    }

    // MARK: - –†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    func getUser() -> User {
        return loadData("user", defaultValue: defaultUser)
    }
    
    func saveUser(user: User) {
        saveData("user", data: user)
    }

    // MARK: - –†–∞–±–æ—Ç–∞ —Å —Ö–æ–±–±–∏
    func getHobbies() -> [Hobby] {
        return loadData("hobbies", defaultValue: defaultHobbies)
    }
    
    func saveHobbies(_ hobbies: [Hobby]) {
        saveData("hobbies", data: hobbies)
    }

    // MARK: - –†–∞–±–æ—Ç–∞ —Å —Ü–µ–ª—è–º–∏
    func getGoals() -> [Goal] {
        return loadData("goals", defaultValue: defaultGoals)
    }
    
    func saveGoals(_ goals: [Goal]) {
        saveData("goals", data: goals)
    }
}
